---
title: Preparing to Deploy PCF on AWS using Terraform
owner: Ops Manager
---

<strong><%= modified_date %></strong>
<html class="list-style-none"></html>

This guide describes the preparation steps required to install Pivotal Cloud Foundry (PCF) on Amazon Web Services (AWS) using Terraform templates. 

The Terraform template for PCF on AWS describes a set of AWS resources and properties.
For more information about how Terraform creates resources in AWS, see the
[AWS Provider](https://www.terraform.io/docs/providers/aws/index.html) topic on the Terraform site. 

You may also find it helpful to review different deployment options in the
[Reference Architecture for Pivotal Cloud Foundry on AWS](../refarch/aws/aws_ref_arch.html).

## <a id="prereqs"></a>Prerequisites ##

In addition to fulfilling the prerequisites listed in the [Installing Pivotal Cloud Foundry on AWS](./aws.html) topic, ensure you have the following: 

* The [Terraform CLI](https://www.terraform.io/intro/getting-started/install.html)
* In your AWS project, ensure you have an IAM user with the following permissions:
  * AmazonEC2FullAccess
  * AmazonRDSFullAccess
  * AmazonRoute53FullAccess
  * AmazonS3FullAccess
  * AmazonVPCFullAccess
  * AmazonIAMFullAccess
  * AmazonKMSFullAccess

## <a id="download"></a>Step 1: Download and Edit the Terraform Variables File ##

Before you can run Terraform commands to create infrastructure resources, you must fill out a template variables file.

1. Navigate to the Pivotal Application Service (PAS) release on [Pivotal Network](https://network.pivotal.io).

1. Download the AWS Terraform zip file.

1. Extract the contents of the zip file and move the folder to the `workspace` directory on your local machine.

1. From a terminal window, navigate to the folder:
  <pre class="terminal">$ cd ~/workspace/TERRAFORMING-AWS-FOLDER</pre>

1. Create a new file named `terraform.tfvars`.
  <pre class="terminal">$ touch terraform.tfvars</pre>

1. Open the `terraform.tfvars` file and paste in the following contents:

    ```
    env_name           = "YOUR-ENVIRONMENT-NAME"
    access_key         = "YOUR-ACCESS-KEY"
    secret_key         = "YOUR-SECRET-KEY"
    region             = "YOUR-AWS-REGION"
    availability_zones = ["YOUR-AZ-1", "YOUR-AZ-2", "YOUR-AZ-3"]
    ops_manager_ami    = "YOUR-OPS-MAN-IMAGE-AMI"
    dns_suffix         = "YOUR-DNS-SUFFIX"

    ssl_cert = <<SSL_CERT
    -----BEGIN CERTIFICATE-----
    YOUR-CERTIFICATE
    -----END CERTIFICATE-----
    SSL_CERT

    ssl_private_key = <<SSL_KEY
    -----BEGIN EXAMPLE RSA PRIVATE KEY-----
    YOUR-PRIVATE-KEY
    -----END EXAMPLE RSA PRIVATE KEY-----
    SSL_KEY

    ```

1. Edit the values in the file according to the table below:
  <table>
    <tr>
      <th style="width: 35%">Value to replace</th>
      <th>Guidance</th>
    </tr>
    <tr>
      <td><code>YOUR-ENVIRONMENT-NAME</code></td>
      <td>Enter a name to use to identify resources in AWS. Terraform prepends the names of the resources it creates with this environment name. Example: <code>pcf</code>.</td>
    </tr>
    <tr>
      <td><code>YOUR-ACCESS-KEY</code></td>
      <td>Enter your AWS Access Key ID of the AWS project in which you want Terraform to create resources.</td>
    </tr>
    <tr>
      <td><code>YOUR-SECRET-KEY</code></td>
      <td>Enter your AWS Secret Access Key of the AWS project in which you want Terraform to create resources.</td>
    </tr>
    <tr>
      <td><code>YOUR-AWS-REGION</code></td>
      <td>Enter the name of the AWS region in which you want Terraform to create resources. Example: <code>us-central1</code>.</td>
    </tr>
    <tr>
      <td><code>YOUR-AZ-1<br>YOUR-AZ-2<br>YOUR-AZ-3</code></td>
      <td>Enter three availability zones from your region. Example: <code>us-central-1a</code>, <code>us-central-1b</code>, <code>us-central-1c</code>.</td>
    </tr>
    <tr>
      <td><code>YOUR-OPS-MAN-IMAGE-AMI</code></td>
      <td>Enter the source code for the Ops Manager Amazon Machine Image (AMI) you want to boot. You can find this code in the PDF included with the Ops Manager release on <a href="https://network.pivotal.io/">Pivotal Network</a>.<br><br>If you want to encrypt your Ops Manager VM, create an encrypted AMI copy from the AWS EC2 dashboard and enter the source code for the coped Ops Manager image instead. For more information about copying an AMI, see step 9 of [Launch an Ops Manager AMI](pcf-aws-manual-config.html#pcfaws-om-ami) in the manual AWS configuration topic.</td>
    </tr>
    <tr>
      <td><code>YOUR-DNS-SUFFIX</code></td>
      <td>Enter a domain name to use as part of the system domain for your PCF deployment. Terraform creates DNS records in AWS using <code>YOUR-ENVIRONMENT-NAME</code> and <code>YOUR-DNS-SUFFIX</code>. For example, if you enter <code>example.com</code> for your DNS suffix and have <code>pcf</code> as your environment name, Terraform will create DNS records at <code>pcf.example.com</code>.</td>
    </tr>
    <tr>
      <td><code>YOUR-CERTIFICATE</code></td>
      <td>Enter a certificate to use for HTTP load balancing. For production environments, use a certificate from a Certificate Authority (CA). For test environments, you can use a self-signed certificate. 

      Your certificate must specify your system domain as the common name. Your system domain is <code>YOUR-ENVIRONMENT-NAME.YOUR-DNS-SUFFIX</code>.

      It also must include the following subdomains: <code>\*.sys.YOUR-SYSTEM-DOMAIN</code>, <code>\*.login.sys.YOUR-SYSTEM-DOMAIN</code>, <code>\*.uaa.sys.YOUR-SYSTEM-DOMAIN</code>, <code>\*.apps.YOUR-SYSTEM-DOMAIN</code>.</p></td>
    </tr>
    <tr>
      <td><code>YOUR-PRIVATE-KEY</code></td>
      <td>Enter a private key for the certificate you entered.</td>
    </tr>
  </table>

## <a id="download"></a>Step 2: Add Optional Variables ##

Complete this step if you want to do any of the following:

- Use an RDS for your deployment
- Deploy the Isolation Segment tile

In your `terraform.tfvars` file, specify the appropriate variables from the sections below.

<p class="note"><strong>Note</strong>: You can see the configurable options by opening the <code>variables.tf</code> file and looking for variables with default values.</p>

### <a id="iso_seg"></a> Isolation Segments

If you plan to deploy the Isolation Segment tile, add the following variables to your `terraform.tfvars` file,
replacing `YOUR-CERTIFICATE` and `YOUR-PRIVATE-KEY` with a certificate and private key.
This causes terraform to create an additional HTTP load balancer across three availability zones to use for the Isolation Segment tile. 

```
create_isoseg_resources = 1

iso_seg_ssl_cert = <<ISO_SEG_SSL_CERT
-----BEGIN CERTIFICATE-----
YOUR-CERTIFICATE
-----END CERTIFICATE-----
ISO_SEG_SSL_CERT

iso_seg_ssl_cert_private_key = <<ISO_SEG_SSL_KEY
-----BEGIN EXAMPLE RSA PRIVATE KEY-----
YOUR-PRIVATE-KEY
-----END EXAMPLE RSA PRIVATE KEY-----
ISO_SEG_SSL_KEY
```

### <a id="cloudsql"></a> RDS

1. If you want to use an RDS for Ops Manager and PAS, add the following to your `terraform.tfvars` file: 

    ```
    rds_instance_count = 1
    ```

1. If you want to specify a username for RDS authentication, add the following variable to your `terraform.tfvars` file.

    ```
    rds_db_username = username
    ```


## <a id="download"></a>Step 3: Create AWS Resources with Terraform ##

Follow these steps to use the Terraform CLI to create resources on AWS:

1. From the directory that contains the Terraform files, run `terraform init` to initialize the directory based on the information you specified in the `terraform.tfvars` file. 
  <pre class="terminal">$ terraform init</pre>

1. Run `terraform plan -out=plan` to create the execution plan for Terraform.
  <pre class="terminal">$ terraform plan -out=plan</pre>

1. Run `terraform apply plan` to execute the plan from the previous step. It may take several minutes for Terraform to create all the resources in AWS. 
  <pre class="terminal">$ terraform apply plan</pre>

## <a id="dns"></a>Step 5: Create DNS Record ##

1. In a browser, navigate to the DNS provider for the DNS suffix you entered in your `terraform.tfvars` file.

1. Create a new NS (Name server) record for your PCF system domain. Your system domain is `YOUR-ENVIRONMENT-NAME.YOUR-DNS-SUFFIX`.

1. In this record, enter the name servers included in `env_dns_zone_name_servers` from your Terraform output.

## <a id="next"></a> What to Do Next ##

Proceed to the next step in the deployment, [Configuring BOSH Director on AWS (Terraform)](./aws-om-config-terraform.html). 

